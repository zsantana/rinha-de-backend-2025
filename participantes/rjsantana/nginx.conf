# RINHA BACKEND 2025 - Nginx Optimized for Resource Constraints
# =============================================================

# OTIMIZAÇÃO: Workers ajustados para CPU limitado (0.2 = ~1 core fraction)
worker_processes 1;
worker_rlimit_nofile 8192;
worker_cpu_affinity auto;

# Minimal logging para economia de resources
error_log /dev/stderr warn;
pid /tmp/nginx.pid;

events {
    # OTIMIZAÇÃO: Conexões ajustadas para memory constraint (50MB)
    worker_connections 4096;
    
    # OTIMIZAÇÃO: Performance settings mantidos
    multi_accept on;
    use epoll;
    accept_mutex off;
}

http {
    # OTIMIZAÇÃO: Configurações mínimas para economia de memória
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # OTIMIZAÇÃO: Logs off para economia de I/O e CPU
    access_log off;
    error_log off;

    # OTIMIZAÇÃO: TCP settings para baixo overhead
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # OTIMIZAÇÃO: Timeouts agressivos para alto throughput
    keepalive_timeout 15;
    keepalive_requests 1000;
    client_header_timeout 5;
    client_body_timeout 5;
    send_timeout 5;
    
    # OTIMIZAÇÃO: Buffer sizes menores para economia de memória
    client_body_buffer_size 8k;
    client_header_buffer_size 2k;
    client_max_body_size 1m;
    large_client_header_buffers 2 4k;
    
    # OTIMIZAÇÃO: Proxy buffers otimizados para memory constraint
    proxy_buffering off;           # Desabilita buffering para economizar RAM
    proxy_request_buffering off;   # Stream direto
    
    # OTIMIZAÇÃO: Upstream APENAS para api01 e api02 (api03 é listener)
    upstream rinha_api {
        # Least connections para distribuição eficiente
        least_conn;
        
        # APENAS APIs que recebem HTTP requests
        server api01:8080 max_fails=2 fail_timeout=5s;
        server api02:8080 max_fails=2 fail_timeout=5s;
        
        # OTIMIZAÇÃO: Keepalive moderado para economia de memória
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 30s;
    }

    server {
        # OTIMIZAÇÃO: Listen settings para alta performance
        listen 9999 backlog=2048 reuseport;
        server_name _;
        
        # OTIMIZAÇÃO: Headers mínimos
        server_tokens off;
        
        # Health check leve
        location /health {
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        # Main location - otimizado para 550 RPS
        location / {
            # OTIMIZAÇÃO: Proxy pass para apenas api01 e api02
            proxy_pass http://rinha_api;
            proxy_http_version 1.1;
            
            # OTIMIZAÇÃO: Headers essenciais apenas
            proxy_set_header Host $host;
            proxy_set_header Connection "";
            
            # OTIMIZAÇÃO: Timeouts agressivos para throughput
            proxy_connect_timeout 3s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            # OTIMIZAÇÃO: Socket keepalive para reuso de conexões
            proxy_socket_keepalive on;
            
            # OTIMIZAÇÃO: Retry rápido em falha
            proxy_next_upstream error timeout http_500 http_502 http_503;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 3s;
        }
    }
}